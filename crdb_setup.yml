---
- name: CockroachDB Setup and Management
  hosts: crdb_servers
  gather_facts: true
  become: false  # Set to true if you need privilege escalation

  vars:
    crdb_version: "latest"  # You can specify a specific version like "22.2.0"
    crdb_cluster_name: "my-crdb-cluster"
    crdb_secure_mode: "disable"  # Set to true for TLS/SSL security
    crdb_listen_port: 26257
    crdb_http_port: 8080
    # crdb_join_addrs: []  # Empty for single node, add IPs for multi-node
    # crdb_locality: "region=us-east,datacenter=dc1"
    # crdb_certs_dir: "/var/lib/cockroach/certs"
    # crdb_data_dir: "/var/lib/cockroach/data"
    # crdb_log_dir: "/var/log/cockroach"
    test_db: testdb
    test_user: testuser
    test_pwd: testpassword
    test_table: users
    test_index: idx_users_name

  tasks:
    # Basic connectivity and version check
    - name: Wait for CockroachDB to become available
      ansible.builtin.wait_for:
        port: "{{ crdb_listen_port }}"
        delay: 10
        timeout: 60

    - name: Check CockroachDB version
      ansible.builtin.command: cockroach version
      register: cockroach_version
      ignore_errors: true
      changed_when: false

    - name: Debug - show CockroachDB version
      ansible.builtin.debug:
        var: cockroach_version.stdout_lines
      when: cockroach_version is success

    - name: Get CockroachDB info
      cockroach_labs.cockroachdb.cockroachdb_info:
        host: localhost
        # port: "{{ crdb_listen_port }}"
        user: root
        ssl_mode: "{{ crdb_secure_mode }}"
        gather_subset: ['cluster', 'databases']
      register: crdb_info

    - name: Create a database
      cockroach_labs.cockroachdb.cockroachdb_db:
        name: mydatabase
        state: present
        host: localhost
        user: root
        # port: "{{ crdb_listen_port }}"
        ssl_mode: "{{ crdb_secure_mode }}"
        # certs_dir: "{{ crdb_certs_dir if crdb_secure_mode else omit }}"
      register: db_creation

    - name: Display database creation result
      ansible.builtin.debug:
        var: db_creation

    - name: Create database user
      cockroach_labs.cockroachdb.cockroachdb_user:
        name: myuser
        # password: "securepassword"  # Consider using ansible-vault for passwords
        state: present
        host: localhost
        # port: "{{ crdb_listen_port }}"
        ssl_mode: "{{ crdb_secure_mode }}"
        # certs_dir: "{{ crdb_certs_dir if crdb_secure_mode else omit }}"
      register: user_creation

    - name: Display user creation result
      ansible.builtin.debug:
        var: user_creation

    - name: Grant privileges to user
      cockroach_labs.cockroachdb.cockroachdb_privilege:
        roles: myuser
        database: mydatabase
        on_type: database
        object_name: mydatabase
        privileges: ["ALL"]
        state: grant
        # host: "localhost"
        # port: "{{ crdb_listen_port }}"
        ssl_mode: "{{ crdb_secure_mode }}"
        # certs_dir: "{{ crdb_certs_dir if crdb_secure_mode else omit }}"
      register: grant_result

    - name: Display grant result
      ansible.builtin.debug:
        var: grant_result

    - name: Set a cluster parameter
      cockroach_labs.cockroachdb.cockroachdb_parameter:
        # profile: web_application
        parameters:
          sql.defaults.distsql: 'on'
          sql.defaults.vectorize: 'on'
          sql.distsql.temp_storage.workmem: '1GiB'
          kv.snapshot_rebalance.max_rate: '64MiB'
          kv.bulk_io_write.concurrent_addsstable_requests: 10
          kv.bulk_io_write.max_rate: '512MiB'
        ssl_mode: "{{ crdb_secure_mode }}"
      register: parameter_result

    - name: Display parameter result
      ansible.builtin.debug:
        var: parameter_result
